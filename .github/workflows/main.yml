name: CI

on:
  push:
    branches: [main]

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
      # Checks-out your repository under $GITHUB_WORKSPACE
      - uses: actions/checkout@v2

      # Set up Python 3.6 environment
      - name: Set up Python 3.6
        uses: actions/setup-python@v1
        with:
          python-version: "3.6"

      - name: Get pip cache dir
        id: pip-cache
        run: |
          echo "::set-output name=dir::$(pip cache dir)"
      
      - name: Cache pip
        uses: actions/cache@v1
        with:
          path: ${{ steps.pip-cache.outputs.dir }}
          key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements.txt') }}
          restore-keys: |
            ${{ runner.os }}-pip-
      
      # Install dependencies
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt
      # Run our unit tests
      - name: Run unit tests
        run: |
          python test_application.py
          
      - name: Login to Docker Hub
        uses: docker/login-action@v1
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}   

      - name: Build and push Docker image
        uses: docker/build-push-action@v1.1.0
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }} 
          repository: ${{ secrets.DOCKER_USERNAME }}/hello-flask
          tags: ${{ github.sha }}, latest
      - name: build example and deploy to minikube
        uses: actions/checkout@v2
      - name: Start minikube
        uses: medyagh/setup-minikube@master
      - name: Try the cluster !
        run: kubectl get pods -A
      - name: Build image
        run: |
          export SHELL=/bin/bash
          eval $(minikube -p minikube docker-env)
          docker build -f ./Dockerfile -t camchil/hello-flask .
          echo -n "verifying images:"
          docker images        
      - name: Deploy to minikube
        run:
          kubectl apply -f deploy-to-deploy.yaml
      - name: Test service URLs
        run: |
          minikube service list
          minikube service hello-flask --url
          echo "------------------opening the service------------------"
          curl $(minikube service hello-flask --url) 
